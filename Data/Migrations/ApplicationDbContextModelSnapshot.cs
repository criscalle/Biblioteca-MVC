// <auto-generated />
using System;
using Biblioteca_MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca_MVC.Models.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterial");

                    b.HasIndex("IdPersona");

                    b.ToTable("Tb_Historial");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.MaterialAcademico", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CantidaRegistrada")
                        .HasColumnType("int");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoMaterial")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoMaterial");

                    b.ToTable("Tb_MaterialAcademico");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Tb_Persona");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LimitePrestamo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tb_Rol");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.TipoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tb_TipoMaterial");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Historial", b =>
                {
                    b.HasOne("Biblioteca_MVC.Models.MaterialAcademico", "MaterialAcademico")
                        .WithMany("Historiales")
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca_MVC.Models.Persona", "Persona")
                        .WithMany("Historiales")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialAcademico");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.MaterialAcademico", b =>
                {
                    b.HasOne("Biblioteca_MVC.Models.TipoMaterial", "TipoMaterial")
                        .WithMany("MaterialesAcademicos")
                        .HasForeignKey("IdTipoMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMaterial");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Persona", b =>
                {
                    b.HasOne("Biblioteca_MVC.Models.Rol", "Rol")
                        .WithMany("Personas")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.MaterialAcademico", b =>
                {
                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Persona", b =>
                {
                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.Rol", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Biblioteca_MVC.Models.TipoMaterial", b =>
                {
                    b.Navigation("MaterialesAcademicos");
                });
#pragma warning restore 612, 618
        }
    }
}
